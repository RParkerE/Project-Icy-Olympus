{"ast":null,"code":"var _jsxFileName = \"D:\\\\App\\\\frontend\\\\src\\\\pages\\\\Tab3.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonContent, IonPage, IonSpinner, IonButton } from '@ionic/react';\nimport ReactMapGL, { Layer, Source, GeolocateControl, Marker } from 'react-map-gl';\nimport { useState, useEffect } from 'react';\nimport './Tab3.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tab3 = () => {\n  _s();\n\n  const geolocateControlStyle = {\n    right: 10,\n    top: 10\n  };\n  const [mapViewport, setMapViewport] = useState({\n    width: '100%',\n    height: '100%',\n    latitude: 30.260540,\n    longitude: -97.738426,\n    zoom: 14\n  });\n  const [barData, setBarData] = useState({\n    type: 'FeatureCollection',\n    features: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [heatLayer, setHeatLayer] = useState(true);\n  const day = ['sun', 'mon', 'tues', 'weds', 'thurs', 'fri', 'sat'];\n  useEffect(() => {\n    fetch('http://localhost:8000/api/venues/').then(async data => {\n      const bars = await data.json();\n      bars.map(bar => {\n        const date = new Date();\n        const today = day[date.getDay()];\n        const hour = 22; //date.getHours();\n\n        var time = 0;\n        var intensity = 0;\n\n        if (hour > 5) {\n          time = hour - 6;\n        } else {\n          time = hour + 18;\n        }\n\n        if (parseInt(bar[today]['hour_analysis'][time]['intensity_nr']) < 4) {\n          intensity = bar[today]['hour_analysis'][time]['intensity_nr'] + 3;\n        } else {\n          intensity = 0;\n        }\n\n        const venue_data = {\n          type: \"Feature\",\n          properties: {\n            name: bar.name,\n            address: bar.address,\n            busyText: bar[today]['hour_analysis'][time]['intensity_txt'],\n            busyLevel: intensity\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: [parseFloat(bar.lng), parseFloat(bar.lat)]\n          }\n        };\n        barData['features'].push(venue_data);\n      });\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  }, []);\n  const [popupInfo, setPopupInfo] = useState(null);\n  const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n    c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n    C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n  function Pins(props) {\n    const {\n      data,\n      onClick\n    } = props;\n    return data.map((bar, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      longitude: bar['geometry']['coordinates'][0],\n      latitude: bar['geometry']['coordinates'][1],\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        height: 20,\n        viewBox: \"0 0 24 24\",\n        style: {\n          cursor: 'pointer',\n          fill: '#d00',\n          stroke: 'none',\n          transform: `translate(${-20 / 2}px,${-20}px)`\n        },\n        onClick: () => onClick(bar),\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: ICON\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, `marker-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this));\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(IonPage, {\n      children: /*#__PURE__*/_jsxDEV(IonContent, {\n        fullscreen: true,\n        children: /*#__PURE__*/_jsxDEV(IonSpinner, {\n          name: \"circles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(IonPage, {\n      children: /*#__PURE__*/_jsxDEV(IonContent, {\n        fullscreen: true,\n        children: [/*#__PURE__*/_jsxDEV(IonButton, {\n          color: \"primary\",\n          onClick: () => setHeatLayer(!heatLayer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, { ...mapViewport,\n          mapboxApiAccessToken: \"pk.eyJ1IjoiZHJpbmtlZGluYXBwIiwiYSI6ImNraWlybzB5dDAxZGoyeHA1bnJ5OWFqZ2MifQ.Y5OWnIfI07LGjLDUccldjA\",\n          mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n          onViewportChange: setMapViewport,\n          children: [/*#__PURE__*/_jsxDEV(GeolocateControl, {\n            style: geolocateControlStyle,\n            positionOptions: {\n              enableHighAccuracy: true\n            },\n            trackUserLocation: true,\n            showAccuracyCircle: false,\n            fitBoundsOptions: {\n              maxZoom: 14\n            },\n            auto: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), barData && /*#__PURE__*/_jsxDEV(Source, {\n            type: \"geojson\",\n            data: barData,\n            children: [/*#__PURE__*/_jsxDEV(Layer, {\n              id: 'barLayer',\n              type: 'heatmap',\n              layout: {\n                'visibility': heatLayer ? 'visible' : 'none'\n              },\n              paint: {\n                'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 14, 1],\n                'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 14, 11],\n                'heatmap-weight': ['interpolate', ['linear'], ['get', 'busyLevel'], 0, 0, 6, 2],\n                'heatmap-opacity': .75\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pins, {\n              data: barData['features']['geometry'],\n              onClick: setPopupInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), console.log(popupInfo)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n  ;\n};\n\n_s(Tab3, \"pCxWkAoE5c/th7SGyPYOARo49YM=\");\n\n_c = Tab3;\nexport default Tab3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tab3\");","map":{"version":3,"sources":["D:/App/frontend/src/pages/Tab3.tsx"],"names":["IonContent","IonPage","IonSpinner","IonButton","ReactMapGL","Layer","Source","GeolocateControl","Marker","useState","useEffect","Tab3","geolocateControlStyle","right","top","mapViewport","setMapViewport","width","height","latitude","longitude","zoom","barData","setBarData","type","features","isLoading","setIsLoading","heatLayer","setHeatLayer","day","fetch","then","data","bars","json","map","bar","date","Date","today","getDay","hour","time","intensity","parseInt","venue_data","properties","name","address","busyText","busyLevel","geometry","coordinates","parseFloat","lng","lat","push","catch","error","console","log","message","popupInfo","setPopupInfo","ICON","Pins","props","onClick","index","cursor","fill","stroke","transform","enableHighAccuracy","maxZoom","id","layout","paint"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonSpinner, IonButton } from '@ionic/react';\nimport ReactMapGL, { Layer, Source, Popup, GeolocateControl, Marker } from 'react-map-gl'\nimport { useState, useEffect } from 'react';\nimport './Tab3.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Tab3: React.FC = () => {\n  const geolocateControlStyle= {\n    right: 10,\n    top: 10\n  };\n\n  const [mapViewport, setMapViewport] = useState({\n    width: '100%',\n    height: '100%',\n    latitude: 30.260540,\n    longitude: -97.738426,\n    zoom: 14\n  });\n\n  const [barData, setBarData] = useState({\n    type: 'FeatureCollection' as const,\n    features: [] as any,\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [heatLayer, setHeatLayer] = useState(true);\n  \n  const day = ['sun', 'mon', 'tues', 'weds', 'thurs', 'fri', 'sat'];\n\n  useEffect (() => {\n    fetch('http://localhost:8000/api/venues/')\n    .then(async(data) => {\n      const bars = await data.json();\n      bars.map((bar: any) => {\n        const date = new Date();\n        const today = day[date.getDay()];\n        const hour = 22//date.getHours();\n        var time = 0;\n        var intensity = 0;\n        if(hour > 5) {\n         time = hour - 6;\n        } else {\n          time = hour + 18;\n        }\n        if(parseInt(bar[today]['hour_analysis'][time]['intensity_nr']) < 4){\n          intensity = bar[today]['hour_analysis'][time]['intensity_nr'] + 3;\n        } else {\n          intensity = 0;\n        }\n        const venue_data = {\n          type: \"Feature\" as const,\n          properties: {\n            name: bar.name,\n            address: bar.address,\n            busyText: bar[today]['hour_analysis'][time]['intensity_txt'],\n            busyLevel: intensity\n          },\n          geometry: {\n            type: \"Point\" as const,\n            coordinates: [parseFloat(bar.lng),parseFloat(bar.lat)]\n          }\n        }\n        barData['features'].push(venue_data);\n      });\n      setIsLoading(false);\n    })\n    .catch(function (error) {\n      console.log(error.message)\n    });\n  }, []);\n\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n    c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n    C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n  function Pins(props: any) {\n    const {data, onClick} = props;\n\n    return data.map((bar: any, index: any) => (\n      <Marker key={`marker-${index}`} longitude={bar['geometry']['coordinates'][0]} latitude={bar['geometry']['coordinates'][1]}>\n        <svg\n          height={20}\n          viewBox=\"0 0 24 24\"\n          style={{\n            cursor: 'pointer',\n            fill: '#d00',\n            stroke: 'none',\n            transform: `translate(${-20 / 2}px,${-20}px)`\n          }}\n          onClick={() => onClick(bar)}\n        >\n          <path d={ICON} />\n        </svg>\n      </Marker>\n    ));\n  }\n\n  if(isLoading) {\n    return (\n      <IonPage>\n        <IonContent fullscreen>\n          <IonSpinner name=\"circles\" />\n        </IonContent>\n      </IonPage>\n    );\n  } else {\n    return (\n      <IonPage>\n        <IonContent fullscreen>\n          <IonButton \n            color=\"primary\" \n            onClick={ () => setHeatLayer(!heatLayer) }\n          >\n          </IonButton>\n          <ReactMapGL\n            {...mapViewport}\n            mapboxApiAccessToken=\"pk.eyJ1IjoiZHJpbmtlZGluYXBwIiwiYSI6ImNraWlybzB5dDAxZGoyeHA1bnJ5OWFqZ2MifQ.Y5OWnIfI07LGjLDUccldjA\"\n            mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n            onViewportChange={setMapViewport}\n          >\n            <GeolocateControl\n              style={geolocateControlStyle}\n              positionOptions={{enableHighAccuracy: true}}\n              trackUserLocation={true}\n              showAccuracyCircle={false}\n              fitBoundsOptions={{maxZoom: 14}}\n              auto\n            />\n            {barData && (\n              <Source type=\"geojson\" data={barData}>\n                <Layer {...{\n                  id: 'barLayer',\n                  type: 'heatmap',\n      